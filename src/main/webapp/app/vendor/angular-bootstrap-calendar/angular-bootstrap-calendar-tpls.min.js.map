{"version":3,"sources":["app.js","templates.js","services/moment.js","services/calendarhelper.js","directives/mwlcalendaryear.js","directives/mwlcalendarweek.js","directives/mwlcalendarmonth.js","directives/mwlcalendarday.js","directives/mwlcalendar.js","filters/truncateEventTitle.js"],"names":[],"mappings":"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","file":"angular-bootstrap-calendar-tpls.min.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc overview\n * @name angularBootstrapCalendarApp\n * @description\n * # angularBootstrapCalendarApp\n *\n * Main module of the application.\n */\nangular\n  .module('mwl.calendar', [\n    'ui.bootstrap'\n  ]);\n","angular.module(\"mwl.calendar\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/day.html\",\"<div class=\\\"cal-day-box\\\"><div class=\\\"row-fluid clearfix cal-row-head\\\"><div class=\\\"span1 col-xs-1 cal-cell\\\">Time</div><div class=\\\"span11 col-xs-11 cal-cell\\\">Events</div></div><div class=\\\"cal-day-panel\\\" style=\\\"height: 960px;\\\"><div class=\\\"cal-day-panel-hour\\\"><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>06:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>06:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>07:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>07:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>08:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>08:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>09:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>09:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>10:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>10:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>11:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>11:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>12:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>12:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>13:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>13:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>14:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>14:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>15:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>15:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>16:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>16:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>17:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>17:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>18:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>18:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>19:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>19:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>20:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>20:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div><div class=\\\"cal-day-hour\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>21:00</b></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><b>21:30</b></div><div class=\\\"span11 col-xs-11\\\"></div></div></div></div><div class=\\\"pull-left day-event day-highlight dh-event-{{ event.type }}\\\" ng-repeat=\\\"event in view track by $index\\\" ng-style=\\\"{top: event.top + \\'px\\', left: event.left + 60 + \\'px\\', height: event.height + \\'px\\'}\\\"><a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"eventClick({$event: event})\\\"><span>{{ event.title | truncateEventTitle:20:event.height }}</span></a></div></div></div>\");\n$templateCache.put(\"templates/main.html\",\"<div class=\\\"cal-context\\\" style=\\\"width: 100%;\\\"><mwl-calendar-year calendar-events=\\\"events\\\" calendar-current-day=\\\"currentDay\\\" calendar-event-click=\\\"eventClick\\\" calendar-edit-event-click=\\\"eventEditClick\\\" calendar-delete-event-click=\\\"eventDeleteClick\\\" calendar-edit-event-html=\\\"editEventHtml\\\" calendar-delete-event-html=\\\"deleteEventHtml\\\" calendar-auto-open=\\\"autoOpen\\\" ng-if=\\\"view == \\'year\\'\\\"></mwl-calendar-year><mwl-calendar-month calendar-events=\\\"events\\\" calendar-current-day=\\\"currentDay\\\" calendar-event-click=\\\"eventClick\\\" calendar-edit-event-click=\\\"eventEditClick\\\" calendar-delete-event-click=\\\"eventDeleteClick\\\" calendar-edit-event-html=\\\"editEventHtml\\\" calendar-delete-event-html=\\\"deleteEventHtml\\\" calendar-auto-open=\\\"autoOpen\\\" calendar-use-iso-week=\\\"useIsoWeek\\\" ng-if=\\\"view == \\'month\\'\\\"></mwl-calendar-month><mwl-calendar-week calendar-events=\\\"events\\\" calendar-current-day=\\\"currentDay\\\" calendar-event-click=\\\"eventClick\\\" calendar-use-iso-week=\\\"useIsoWeek\\\" ng-if=\\\"view == \\'week\\'\\\"></mwl-calendar-week><mwl-calendar-day calendar-events=\\\"events\\\" calendar-current-day=\\\"currentDay\\\" calendar-event-click=\\\"eventClick\\\" ng-if=\\\"view == \\'day\\'\\\"></mwl-calendar-day></div>\");\n$templateCache.put(\"templates/month.html\",\"<div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"day in weekDays\\\">{{ day }}</div></div><div class=\\\"cal-month-box\\\"><div ng-repeat=\\\"week in view track by $index\\\"><div class=\\\"cal-row-fluid cal-before-eventlist\\\"><div class=\\\"cal-cell1 cal-cell {{ day.highlightClass }}\\\" ng-repeat=\\\"day in week track by $index\\\" ng-click=\\\"dayClicked($parent.$index, $index)\\\" ng-class=\\\"{pointer: day.events.length > 0}\\\"><div class=\\\"cal-month-day\\\" ng-class=\\\"{\\'cal-day-outmonth\\': !day.inMonth, \\'cal-day-inmonth\\': day.inMonth, \\'cal-day-weekend\\': $index == 5 || $index == 6, \\'cal-day-today\\': day.isToday}\\\"><span class=\\\"pull-right\\\" data-cal-date=\\\"\\\" ng-click=\\\"drillDown(day.label)\\\">{{ day.label }}</span><div class=\\\"cal-day-tick\\\" ng-show=\\\"day.isOpened\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div><div class=\\\"events-list\\\" ng-show=\\\"day.events.length > 0\\\"><a href=\\\"javascript:;\\\" ng-click=\\\"eventClick({$event: event})\\\" ng-repeat=\\\"event in day.events track by $index\\\" class=\\\"pull-left event event-{{ event.type }}\\\" ng-mouseenter=\\\"highlightEvent(event, true)\\\" ng-mouseleave=\\\"highlightEvent(event, false)\\\" tooltip-append-to-body=\\\"true\\\" tooltip=\\\"{{ event.title }}\\\"></a></div></div></div></div><div class=\\\"cal-slide-box\\\" collapse=\\\"!week.isOpened\\\"><div class=\\\"cal-slide-content cal-event-list\\\"><ul class=\\\"unstyled list-unstyled\\\"><li ng-repeat=\\\"event in openEvents track by $index\\\"><span class=\\\"pull-left event event-{{ event.type }}\\\"></span> &nbsp; <a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"eventClick({$event: event})\\\">{{ event.title }}</a> <a href=\\\"javascript:;\\\" class=\\\"event-item-edit\\\" ng-if=\\\"editEventHtml && event.editable !== false\\\" ng-bind-html=\\\"$sce.trustAsHtml(editEventHtml)\\\" ng-click=\\\"eventEditClick({$event: event})\\\"></a> <a href=\\\"javascript:;\\\" class=\\\"event-item-delete\\\" ng-if=\\\"deleteEventHtml && event.deletable !== false\\\" ng-bind-html=\\\"$sce.trustAsHtml(deleteEventHtml)\\\" ng-click=\\\"eventDeleteClick({$event: event})\\\"></a></li></ul></div></div></div></div>\");\n$templateCache.put(\"templates/week.html\",\"<div class=\\\"cal-week-box\\\"><div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"column in view.columns track by $index\\\" ng-class=\\\"{\\'cal-day-weekend\\': $index > 4, \\'cal-day-today\\': column.isToday}\\\">{{ column.weekDay }}<br><small><span data-cal-date=\\\"\\\" ng-click=\\\"drillDown(column.day)\\\" class=\\\"pointer\\\">{{ column.date }}</span></small></div></div><hr><div class=\\\"cal-row-fluid\\\" ng-repeat=\\\"event in view.events track by $index\\\"><div class=\\\"cal-cell{{ event.daySpan }} cal-offset{{ event.dayOffset }} day-highlight dh-event-{{ event.type }}\\\" data-event-class=\\\"\\\"><a href=\\\"javascript:;\\\" ng-click=\\\"eventClick({$event: event})\\\" class=\\\"cal-event-week\\\">{{ event.title }}</a></div></div></div>\");\n$templateCache.put(\"templates/year.html\",\"<div class=\\\"cal-year-box\\\"><div ng-repeat=\\\"year in view track by $index\\\"><div class=\\\"row cal-before-eventlist\\\"><div class=\\\"span3 col-md-3 col-xs-6 cal-cell\\\" ng-repeat=\\\"month in year track by $index\\\" ng-click=\\\"monthClicked($parent.$index, $index)\\\" ng-class=\\\"{pointer: month.events.length > 0, \\'cal-day-today\\': month.isToday}\\\"><span class=\\\"pull-right\\\" data-cal-date=\\\"\\\" ng-click=\\\"drillDown(month.monthIndex)\\\">{{ month.label }}</span> <small class=\\\"cal-events-num badge badge-important pull-left\\\" ng-show=\\\"month.events.length > 0\\\">{{ month.events.length }}</small><div class=\\\"cal-day-tick\\\" ng-show=\\\"month.isOpened\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div></div></div><div class=\\\"cal-slide-box\\\" collapse=\\\"!year.isOpened\\\"><span class=\\\"cal-slide-tick\\\"></span><div class=\\\"cal-slide-content\\\"><ul class=\\\"unstyled list-unstyled\\\"><li ng-repeat=\\\"event in openEvents track by $index\\\"><span class=\\\"pull-left event\\\" ng-class=\\\"\\'event-\\' + event.type\\\"></span> &nbsp; <a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"eventClick({$event: event})\\\">{{ event.title }}</a> <a href=\\\"javascript:;\\\" class=\\\"event-item-edit\\\" ng-if=\\\"editEventHtml && event.editable !== false\\\" ng-bind-html=\\\"$sce.trustAsHtml(editEventHtml)\\\" ng-click=\\\"eventEditClick({$event: event})\\\"></a> <a href=\\\"javascript:;\\\" class=\\\"event-item-delete\\\" ng-if=\\\"deleteEventHtml && event.deletable !== false\\\" ng-bind-html=\\\"$sce.trustAsHtml(deleteEventHtml)\\\" ng-click=\\\"eventDeleteClick({$event: event})\\\"></a></li></ul></div></div></div></div>\");}]);","'use strict';\n\n/**\n * @ngdoc service\n * @name angularBootstrapCalendarApp.moment\n * @description\n * # moment\n * Constant in the angularBootstrapCalendarApp.\n */\nangular.module('mwl.calendar')\n  .constant('moment', window.moment);\n","'use strict';\n\n/**\n * @ngdoc service\n * @name angularBootstrapCalendarApp.calendarHelper\n * @description\n * # calendarHelper\n * Service in the angularBootstrapCalendarApp.\n */\nangular.module('mwl.calendar')\n  .service('calendarHelper', function calendarHelper($filter, moment) {\n\n    var self = this;\n\n    function isISOWeekBasedOnLocale() {\n      return moment().startOf('week').day() === 1;\n    }\n\n    function isISOWeek(userValue) {\n      //If a manual override has been set in the directive, use that\n      if (angular.isDefined(userValue)) return userValue;\n      //Otherwise fallback to the locale\n      return isISOWeekBasedOnLocale();\n    }\n\n    this.getMonthNames = function(short) {\n\n      var format = short ? 'MMM' : 'MMMM';\n\n      var months = [];\n      for (var i = 0; i <= 11; i++) {\n        months.push($filter('date')(new Date(2014, i), format));\n      }\n\n      return months;\n\n    };\n\n    this.getWeekDayNames = function(short, useISOWeek) {\n\n      var format = short ? 'EEE' : 'EEEE';\n\n      var weekdays = [];\n      var startDay = isISOWeek(useISOWeek) ? 22 : 21;\n      for (var i = 0; i <= 6; i++) {\n        weekdays.push($filter('date')(new Date(2014, 8, startDay + i), format));\n      }\n\n      return weekdays;\n\n    };\n\n    this.eventIsInPeriod = function(eventStart, eventEnd, periodStart, periodEnd) {\n\n      return (\n          moment(eventStart).isAfter(moment(periodStart)) &&\n          moment(eventStart).isBefore(moment(periodEnd))\n        ) || (\n          moment(eventEnd).isAfter(moment(periodStart)) &&\n          moment(eventEnd).isBefore(moment(periodEnd))\n        ) || (\n          moment(eventStart).isBefore(moment(periodStart)) &&\n          moment(eventEnd).isAfter(moment(periodEnd))\n        ) || (\n          moment(eventStart).isSame(moment(periodStart))\n        ) || (\n          moment(eventEnd).isSame(moment(periodEnd))\n      );\n\n    };\n\n    this.getYearView = function(events, currentDay) {\n\n      var grid = [];\n      var months = self.getMonthNames();\n\n      for (var i = 0; i < 3; i++) {\n        var row = [];\n        for (var j = 0; j < 4; j++) {\n          var monthIndex = 12 - months.length;\n          var startPeriod = new Date(moment(currentDay).format('YYYY'), monthIndex, 1);\n          var endPeriod = moment(startPeriod).add(1, 'month').subtract(1, 'second').toDate();\n\n          row.push({\n            label: months.shift(),\n            monthIndex: monthIndex,\n            isToday: moment(startPeriod).startOf('month').isSame(moment().startOf('month')),\n            events: events.filter(function(event) {\n              return self.eventIsInPeriod(event.starts_at, event.ends_at, startPeriod, endPeriod);\n            })\n          });\n        }\n        grid.push(row);\n      }\n\n      return grid;\n\n    };\n\n    this.getMonthView = function(events, currentDay, useISOWeek) {\n\n      var dateOffset = isISOWeek(useISOWeek) ? 1 : 0;\n\n      function getWeekDayIndex() {\n        var day = startOfMonth.day() - dateOffset;\n        if (day < 0) day = 6;\n        return day;\n      }\n\n      var startOfMonth = moment(currentDay).startOf('month');\n      var numberOfDaysInMonth = moment(currentDay).endOf('month').date();\n\n      var grid = [];\n      var buildRow = new Array(7);\n      var eventsWithIds = events.map(function(event, index) {\n        event.$id = index;\n        return event;\n      });\n\n      for (var i = 1; i <= numberOfDaysInMonth; i++) {\n\n        if (i == 1) {\n          var weekdayIndex = getWeekDayIndex(startOfMonth);\n          var prefillMonth = startOfMonth.clone();\n          while (weekdayIndex > 0) {\n            weekdayIndex--;\n            prefillMonth = prefillMonth.subtract(1, 'day');\n            buildRow[weekdayIndex] = {\n              label: prefillMonth.date(),\n              date: prefillMonth.clone(),\n              inMonth: false,\n              events: []\n            };\n          }\n        }\n\n        buildRow[getWeekDayIndex(startOfMonth)] = {\n          label: startOfMonth.date(),\n          inMonth: true,\n          isToday: moment().startOf('day').isSame(startOfMonth),\n          date: startOfMonth.clone(),\n          events: eventsWithIds.filter(function(event) {\n            return self.eventIsInPeriod(event.starts_at, event.ends_at, startOfMonth.clone().startOf('day'), startOfMonth.clone().endOf('day'));\n          })\n        };\n\n        if (i == numberOfDaysInMonth) {\n          var weekdayIndex = getWeekDayIndex(startOfMonth);\n          var postfillMonth = startOfMonth.clone();\n          while (weekdayIndex < 6) {\n            weekdayIndex++;\n            postfillMonth = postfillMonth.add(1, 'day');\n            buildRow[weekdayIndex] = {\n              label: postfillMonth.date(),\n              date: postfillMonth.clone(),\n              inMonth: false,\n              events: []\n            };\n          }\n        }\n\n        if (getWeekDayIndex(startOfMonth) === 6 || i == numberOfDaysInMonth) {\n          grid.push(buildRow);\n          buildRow = new Array(7);\n        }\n\n        startOfMonth = startOfMonth.add(1, 'day');\n\n      }\n\n      return grid;\n\n    };\n\n    this.getWeekView = function(events, currentDay, useISOWeek) {\n\n      var dateOffset = isISOWeek(useISOWeek) ? 1 : 0;\n      var columns = new Array(7);\n      var weekDays = self.getWeekDayNames(false, useISOWeek);\n      var currentWeekDayIndex = currentDay.getDay();\n      var beginningOfWeek, endOfWeek;\n\n      for (var i = currentWeekDayIndex; i >= 0; i--) {\n        var date = moment(currentDay).subtract(currentWeekDayIndex - i, 'days').add(dateOffset, 'day').toDate();\n        columns[i] = {\n          weekDay: weekDays[i],\n          day: $filter('date')(date, 'd'),\n          date: $filter('date')(date, 'd MMM'),\n          isToday: moment(date).startOf('day').isSame(moment().startOf('day'))\n        };\n        if (i == 0) {\n          beginningOfWeek = date;\n        } else if (i == 6) {\n          endOfWeek = date;\n        }\n      }\n\n      for (var i = currentWeekDayIndex + 1; i < 7; i++) {\n        var date = moment(currentDay).add(i - currentWeekDayIndex, 'days').add(dateOffset, 'day').toDate();\n        columns[i] = {\n          weekDay: weekDays[i],\n          day: $filter('date')(date, 'd'),\n          date: $filter('date')(date, 'd MMM'),\n          isToday: moment(date).startOf('day').isSame(moment().startOf('day'))\n        };\n        if (i == 0) {\n          beginningOfWeek = date;\n        } else if (i == 6) {\n          endOfWeek = date;\n        }\n      }\n\n      endOfWeek = moment(endOfWeek).endOf('day').toDate();\n      beginningOfWeek = moment(beginningOfWeek).startOf('day').toDate();\n\n      var eventsSorted = events.filter(function(event) {\n        return self.eventIsInPeriod(event.starts_at, event.ends_at, beginningOfWeek, endOfWeek);\n      }).map(function(event) {\n        var span = moment(event.ends_at).startOf('day').diff(moment(event.starts_at).startOf('day'), 'days') + 1;\n        if (span >= 7) {\n          span = 7;\n          if (moment(event.ends_at).startOf('day').diff(moment(endOfWeek).startOf('day'), 'days') < 0) {\n            span += moment(event.ends_at).startOf('day').diff(moment(endOfWeek).startOf('day'), 'days') + dateOffset;\n          }\n        }\n\n        var offset = moment(event.starts_at).startOf('day').diff(moment(beginningOfWeek).startOf('day'), 'days');\n        if (offset < 0) offset = 0;\n        if (offset > 6) offset = 6;\n\n        if (span - offset > 0) {\n          span -= offset;\n        }\n\n        event.daySpan = span;\n        event.dayOffset = offset;\n        return event;\n      });\n\n      return {columns: columns, events: eventsSorted};\n\n    };\n\n    this.getDayView = function(events, currentDay) {\n\n      var calendarStart = moment(currentDay).startOf('day').add(6, 'hours');\n      var calendarEnd = moment(currentDay).startOf('day').add(22, 'hours');\n      var calendarHeight = 16 * 60;\n      var buckets = [];\n\n      return events.filter(function(event) {\n        return self.eventIsInPeriod(event.starts_at, event.ends_at, moment(currentDay).startOf('day').toDate(), moment(currentDay).endOf('day').toDate());\n      }).map(function(event) {\n        if (moment(event.starts_at).isBefore(calendarStart)) {\n          event.top = 0;\n        } else {\n          event.top = moment(event.starts_at).startOf('minute').diff(calendarStart.startOf('minute'), 'minutes') - 2;\n        }\n\n        if (moment(event.ends_at).isAfter(calendarEnd)) {\n          event.height = calendarHeight - event.top;\n        } else {\n          var diffStart = event.starts_at;\n          if (moment(event.starts_at).isBefore(calendarStart)) {\n            diffStart = calendarStart.toDate();\n          }\n          event.height = moment(event.ends_at).diff(diffStart, 'minutes');\n        }\n\n        if (event.top - event.height > calendarHeight) {\n          event.height = 0;\n        }\n\n        event.left = 0;\n\n        return event;\n      }).filter(function(event) {\n        return event.height > 0;\n      }).map(function(event) {\n\n        var cannotFitInABucket = true;\n        buckets.forEach(function(bucket, bucketIndex) {\n          var canFitInThisBucket = true;\n\n          bucket.forEach(function(bucketItem) {\n            if (self.eventIsInPeriod(event.starts_at, event.ends_at, bucketItem.starts_at, bucketItem.ends_at) || self.eventIsInPeriod(bucketItem.starts_at, bucketItem.ends_at, event.starts_at, event.ends_at)) {\n              canFitInThisBucket = false;\n            }\n          });\n\n          if (canFitInThisBucket && cannotFitInABucket) {\n            cannotFitInABucket = false;\n            event.left = bucketIndex * 150;\n            buckets[bucketIndex].push(event);\n          }\n\n        });\n\n        if (cannotFitInABucket) {\n          event.left = buckets.length * 150;\n          buckets.push([event]);\n        }\n\n        return event;\n\n      });\n\n    };\n\n    this.toggleEventBreakdown = function(view, rowIndex, cellIndex) {\n\n      var openEvents = [];\n\n      if (view[rowIndex][cellIndex].events.length > 0) {\n\n        var isCellOpened = view[rowIndex][cellIndex].isOpened;\n\n        view = view.map(function(row) {\n          row.isOpened = false;\n          return row.map(function(cell) {\n            cell.isOpened = false;\n            return cell;\n          });\n        });\n\n        view[rowIndex][cellIndex].isOpened = !isCellOpened;\n        view[rowIndex].isOpened = !isCellOpened;\n        openEvents = view[rowIndex][cellIndex].events;\n      }\n\n      return {view: view, openEvents: openEvents};\n\n    };\n\n  });\n","'use strict';\n\n/**\n * @ngdoc directive\n * @name angularBootstrapCalendarApp.directive:mwlCalendarYear\n * @description\n * # mwlCalendarYear\n */\nangular.module('mwl.calendar')\n  .directive('mwlCalendarYear', function($sce, $timeout, calendarHelper, moment) {\n    return {\n      templateUrl: 'templates/year.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=calendarEvents',\n        currentDay: '=calendarCurrentDay',\n        eventClick: '=calendarEventClick',\n        eventEditClick: '=calendarEditEventClick',\n        eventDeleteClick: '=calendarDeleteEventClick',\n        editEventHtml: '=calendarEditEventHtml',\n        deleteEventHtml: '=calendarDeleteEventHtml',\n        autoOpen: '=calendarAutoOpen'\n      },\n      link: function postLink(scope, element, attrs, calendarCtrl) {\n\n        var firstRun = false;\n\n        scope.$sce = $sce;\n\n        calendarCtrl.titleFunctions.year = function(currentDay) {\n          return moment(currentDay).format('YYYY');\n        };\n\n        function updateView() {\n          scope.view = calendarHelper.getYearView(scope.events, scope.currentDay);\n\n          //Auto open the calendar to the current day if set\n          if (scope.autoOpen && !firstRun) {\n            scope.view.forEach(function(row, rowIndex) {\n              row.forEach(function(year, cellIndex) {\n                if (year.label == moment(scope.currentDay).format('MMMM')) {\n                  scope.monthClicked(rowIndex, cellIndex);\n                  $timeout(function() {\n                    firstRun = false;\n                  });\n                }\n              });\n            });\n          }\n        }\n\n        scope.$watch('currentDay', updateView);\n        scope.$watch('events', updateView, true);\n\n        scope.monthClicked = function(yearIndex, monthIndex) {\n\n          var handler = calendarHelper.toggleEventBreakdown(scope.view, yearIndex, monthIndex);\n          scope.view = handler.view;\n          scope.openEvents = handler.openEvents;\n\n        };\n\n        scope.drillDown = function(month) {\n          calendarCtrl.changeView('month', moment(scope.currentDay).clone().month(month).toDate());\n        };\n\n      }\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc directive\n * @name angularBootstrapCalendarApp.directive:mwlCalendarWeek\n * @description\n * # mwlCalendarWeek\n */\nangular.module('mwl.calendar')\n  .directive('mwlCalendarWeek', function(moment, calendarHelper) {\n    return {\n      templateUrl: 'templates/week.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=calendarEvents',\n        currentDay: '=calendarCurrentDay',\n        eventClick: '=calendarEventClick',\n        useIsoWeek: '=calendarUseIsoWeek'\n      },\n      link: function postLink(scope, element, attrs, calendarCtrl) {\n\n        calendarCtrl.titleFunctions.week = function(currentDay) {\n          return 'Week ' + moment(currentDay).week() + ' of ' + moment(currentDay).format('YYYY');\n        };\n\n        function updateView() {\n          scope.view = calendarHelper.getWeekView(scope.events, scope.currentDay, scope.useIsoWeek);\n        }\n\n        scope.drillDown = function(day) {\n          calendarCtrl.changeView('day', moment(scope.currentDay).clone().date(day).toDate());\n        };\n\n        scope.$watch('currentDay', updateView);\n        scope.$watch('events', updateView, true);\n\n      }\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc directive\n * @name angularBootstrapCalendarApp.directive:mwlCalendarMonth\n * @description\n * # mwlCalendarMonth\n */\nangular.module('mwl.calendar')\n  .directive('mwlCalendarMonth', function ($sce, $timeout, calendarHelper) {\n    return {\n      templateUrl: 'templates/month.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=calendarEvents',\n        currentDay: '=calendarCurrentDay',\n        eventClick: '=calendarEventClick',\n        eventEditClick: '=calendarEditEventClick',\n        eventDeleteClick: '=calendarDeleteEventClick',\n        editEventHtml: '=calendarEditEventHtml',\n        deleteEventHtml: '=calendarDeleteEventHtml',\n        autoOpen: '=calendarAutoOpen',\n        useIsoWeek: '=calendarUseIsoWeek'\n      },\n      link: function postLink(scope, element, attrs, calendarCtrl) {\n\n        var firstRun = false;\n\n        scope.$sce = $sce;\n\n        calendarCtrl.titleFunctions.month = function(currentDay) {\n          return moment(currentDay).format('MMMM YYYY');\n        };\n\n        function updateView() {\n          scope.view = calendarHelper.getMonthView(scope.events, scope.currentDay, scope.useIsoWeek);\n\n          //Auto open the calendar to the current day if set\n          if (scope.autoOpen && !firstRun) {\n            scope.view.forEach(function(week, rowIndex) {\n              week.forEach(function(day, cellIndex) {\n                if (day.inMonth && moment(scope.currentDay).startOf('day').isSame(day.date.startOf('day'))) {\n                  scope.dayClicked(rowIndex, cellIndex);\n                  $timeout(function() {\n                    firstRun = false;\n                  });\n                }\n              });\n            });\n          }\n\n        }\n\n        scope.$watch('currentDay', updateView);\n        scope.$watch('events', updateView, true);\n\n        scope.weekDays = calendarHelper.getWeekDayNames(false, scope.useIsoWeek);\n\n        scope.dayClicked = function(rowIndex, cellIndex) {\n\n          var handler = calendarHelper.toggleEventBreakdown(scope.view, rowIndex, cellIndex);\n          scope.view = handler.view;\n          scope.openEvents = handler.openEvents;\n\n        };\n\n        scope.drillDown = function(day) {\n          calendarCtrl.changeView('day', moment(scope.currentDay).clone().date(day).toDate());\n        };\n\n        scope.highlightEvent = function(event, shouldAddClass) {\n\n          scope.view = scope.view.map(function(week) {\n\n            week.isOpened = false;\n\n            return week.map(function(day) {\n\n              delete day.highlightClass;\n              day.isOpened = false;\n\n              if (shouldAddClass) {\n                var dayContainsEvent = day.events.filter(function(e) {\n                  return e.$id == event.$id;\n                }).length > 0;\n\n                if (dayContainsEvent) {\n                  day.highlightClass = 'day-highlight dh-event-' + event.type;\n                }\n              }\n\n              return day;\n\n            });\n\n          });\n\n        };\n\n      }\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc directive\n * @name angularBootstrapCalendarApp.directive:mwlCalendarDay\n * @description\n * # mwlCalendarDay\n */\nangular.module('mwl.calendar')\n  .directive('mwlCalendarDay', function(calendarHelper) {\n    return {\n      templateUrl: 'templates/day.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=calendarEvents',\n        currentDay: '=calendarCurrentDay',\n        eventClick: '=calendarEventClick'\n      },\n      link: function postLink(scope, element, attrs, calendarCtrl) {\n\n        calendarCtrl.titleFunctions.day = function(currentDay) {\n          return moment(currentDay).format('dddd DD MMMM, YYYY');\n        };\n\n        function updateView() {\n          scope.view = calendarHelper.getDayView(scope.events, scope.currentDay);\n        }\n\n        scope.$watch('currentDay', updateView);\n        scope.$watch('events', updateView, true);\n\n      }\n    };\n  });\n","'use strict';\n\n/**\n * @ngdoc directive\n * @name angularBootstrapCalendarApp.directive:mwlCalendar\n * @description\n * # mwlCalendar\n */\nangular.module('mwl.calendar')\n  .directive('mwlCalendar', function (moment) {\n    return {\n      templateUrl: 'templates/main.html',\n      restrict: 'EA',\n      scope: {\n        events: '=calendarEvents',\n        view: '=calendarView',\n        currentDay: '=calendarCurrentDay',\n        control: '=calendarControl',\n        eventClick: '&calendarEventClick',\n        eventEditClick: '&calendarEditEventClick',\n        eventDeleteClick: '&calendarDeleteEventClick',\n        editEventHtml: '=calendarEditEventHtml',\n        deleteEventHtml: '=calendarDeleteEventHtml',\n        autoOpen: '=calendarAutoOpen',\n        useIsoWeek: '=calendarUseIsoWeek'\n      },\n      controller: function($scope) {\n\n        var self = this;\n\n        this.titleFunctions = {};\n\n        this.changeView = function(view, newDay) {\n          $scope.view = view;\n          $scope.currentDay = newDay;\n        };\n\n        $scope.control = $scope.control || {};\n\n        $scope.control.prev = function() {\n          $scope.currentDay = moment($scope.currentDay).subtract(1, $scope.view).toDate();\n        };\n\n        $scope.control.next = function() {\n          $scope.currentDay = moment($scope.currentDay).add(1, $scope.view).toDate();\n        };\n\n        $scope.control.getTitle = function() {\n          if (!self.titleFunctions[$scope.view]) return '';\n          return self.titleFunctions[$scope.view]($scope.currentDay);\n        };\n\n      }\n    };\n  });\n","'use strict';\n\n\nangular.module('mwl.calendar')\n  .filter('truncateEventTitle', function() {\n\n    return function(string, length, boxHeight) {\n      if (!string) return '';\n\n      //Only truncate if if actually needs truncating\n      if (string.length >= length && string.length / 20 > boxHeight / 30) {\n        return string.substr(0, length) + '...';\n      } else {\n        return string;\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}